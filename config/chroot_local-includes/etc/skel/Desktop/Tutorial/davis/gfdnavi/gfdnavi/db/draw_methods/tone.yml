:name: tone_contour
:description: tone and contour plot
:ndims: 2
:nvars: 1
:vizshot_method: tone_cont
:setting_html: |
  <div>
    <%= check_box("analysis", "tone_contour_tone", :onclick => "
                  if($('analysis_tone_contour_tone').checked){
                    $('analysis_tone_contour_coloring').checked = false;
                    Element.hide('span_analysis_tone_contour_coloring');
                  } else {
                    Element.show('span_analysis_tone_contour_coloring');
                    if(!$('analysis_tone_contour_contour').checked)
                      $('analysis_tone_contour_contour').checked = true;
                  }
                  ") %>
    <label for="analysis_tone_contour_tone">Draw tone</label>
    <%= check_box("analysis", "tone_contour_contour", :onclick => "
                  if(parseInt($('analysis_tone_contour_nlev').value) > 48 
                     & $('analysis_tone_contour_contour').checked)
                    $('analysis_tone_contour_nlev').value = 48;
                  if((!$('analysis_tone_contour_contour').checked)
                     & (!$('analysis_tone_contour_tone').checked)){
                    $('analysis_tone_contour_tone').checked = true;
                    Element.hide('span_analysis_tone_contour_coloring');
                  }
                  ") %>
    <label for="analysis_tone_contour_contour">Draw contour</label>
    <br/>
    <label for="analysis_tone_contour_min">minimum tone/contour level</label>
    <%= text_field("analysis", "tone_contour_min", :size => 4, :maxlength => 12, :onchange => "
                   var min = parseFloat($('analysis_tone_contour_min').value);
                   var max = parseFloat($('analysis_tone_contour_max').value);
                   if(min==max) $('analysis_tone_contour_min').value = '';

                   if($('analysis_tone_contour_log').checked){
                     if(parseFloat($('analysis_tone_contour_max').value)==0){
                       $('analysis_tone_contour_min').value = '';
                     } else {
                       var minabs = Math.abs(min);
                       var maxabs = Math.abs(max);
                       var logmin = Math.log(minabs) / Math.LN10;
                       var logmax = Math.log(maxabs) / Math.LN10;
                       var logmin_floor = Math.floor(logmin);
                       var logmax_floor = Math.floor(logmax);
                       if((logmin_floor == logmax_floor) && 
                          (((minabs-2*Math.pow(10,logmin_floor))*(maxabs-2*Math.pow(10,logmax_floor)) > 0) || 
                           ((minabs-5*Math.pow(10,logmin_floor))*(maxabs-5*Math.pow(10,logmax_floor)) > 0)))
                         $('analysis_tone_contour_min').value = '';
                     }
                   } else if(min > max){
                     $('analysis_tone_contour_min').value = $('analysis_tone_contour_max').value;
                     $('analysis_tone_contour_max').value = min;
                   }
                   ") %>
    <br/>
    <label for="analysis_tone_contour_max">maximum tone/contour level</label>
    <%= text_field("analysis", "tone_contour_max", :size => 4, :maxlength => 12, :onchange => "
                   var min = parseFloat($('analysis_tone_contour_min').value);
                   var max = parseFloat($('analysis_tone_contour_max').value);
                   if(min==max) $('analysis_tone_contour_max').value = '';

                   if($('analysis_tone_contour_log').checked){
                     if(parseFloat($('analysis_tone_contour_max').value)==0){
                       $('analysis_tone_contour_max').value = '';
                     } else {
                       var minabs = Math.abs(min);
                       var maxabs = Math.abs(max);
                       var logmin = Math.log(minabs) / Math.LN10;
                       var logmax = Math.log(maxabs) / Math.LN10;
                       var logmin_floor = Math.floor(logmin);
                       var logmax_floor = Math.floor(logmax);
                       if((logmin_floor == logmax_floor) && 
                          (((minabs-2*Math.pow(10,logmin_floor))*(maxabs-2*Math.pow(10,logmax_floor)) > 0) || 
                           ((minabs-5*Math.pow(10,logmin_floor))*(maxabs-5*Math.pow(10,logmax_floor)) > 0)))
                         $('analysis_tone_contour_max').value = '';
                     }
                   } else if(min > max){
                     $('analysis_tone_contour_min').value = $('analysis_tone_contour_max').value;
                     $('analysis_tone_contour_max').value = min;
                   }
                   ") %>
    <br/>
    <label for="analysis_tone_contour_nlev">num of tone/contour levels</label>
    <%= text_field("analysis", "tone_contour_nlev", :size => 2, :maxlength => 2, :onchange => "
                   if(parseInt($('analysis_tone_contour_nlev').value) > 48 
                      & $('analysis_tone_contour_contour').checked){
                     $('analysis_tone_contour_nlev').value = 48;
                   }
                   ") %>
    <br/>
    <%= check_box("analysis", "tone_contour_log", :onclick => "
                   var min = parseFloat($('analysis_tone_contour_min').value);
                   var max = parseFloat($('analysis_tone_contour_max').value);
                   if($('analysis_tone_contour_log').checked){
                     if(parseFloat($('analysis_tone_contour_min').value)==0){
                       $('analysis_tone_contour_min').value = '';
                     } else if(parseFloat($('analysis_tone_contour_max').value)==0){
                       $('analysis_tone_contour_max').value = '';
                     } else {
                       var minabs = Math.abs(min);
                       var maxabs = Math.abs(max);
                       var logmin = Math.log(minabs) / Math.LN10;
                       var logmax = Math.log(maxabs) / Math.LN10;
                       var logmin_floor = Math.floor(logmin);
                       var logmax_floor = Math.floor(logmax);
                       if((logmin_floor == logmax_floor) && 
                          (((minabs-2*Math.pow(10,logmin_floor))*(maxabs-2*Math.pow(10,logmax_floor)) > 0) || 
                           ((minabs-5*Math.pow(10,logmin_floor))*(maxabs-5*Math.pow(10,logmax_floor)) > 0)))
                         $('analysis_tone_contour_max').value = '';
                     }
                   } else if(min > max){
                     $('analysis_tone_contour_min').value = $('analysis_tone_contour_max').value;
                     $('analysis_tone_contour_max').value = min;
                   }

    ") %>
    <label for="analysis_tone_contour_log">Logarithmic levels</label>
    <br/>
    <label for="analysis_tone_contour_levels">comma-separated tone/contour levels:</label>
    <%= text_field("analysis", "tone_contour_levels", :size => 30, :maxlength => 200) %>
    <br/>
    <label for="analysis_tone_contour_interval">tone/contour interval:</label>
    <%= text_field("analysis", "tone_contour_interval", :size => 10, :maxlength => 60) %>
    <br/>
    <span id="span_analysis_tone_contour_coloring">
      <%= check_box("analysis", "tone_contour_coloring") %>
      <label for="analysis_tone_contour_coloring">Rainbow contours</label>
      <br/>
    </span>
    <%= check_box("analysis", "tone_contour_color_bar") %>
    <label for="analysis_tone_contour_color_bar">Color bar</label><br>
    <%= check_box("analysis", "tone_contour_tonc") %>
    <label for="analysis_tone_contour_tonc">Tiling (uetonc)</label>
  </div>
  <!-- INITIALIZATION -->
  <script>
    if($('analysis_tone_contour_tone').checked){
      $('analysis_tone_contour_coloring').checked = false;
      Element.hide('span_analysis_tone_contour_coloring');
    } else {
      Element.show('span_analysis_tone_contour_coloring');
    }
  </script>

:options:
- :name: tone
  :default: true
  :type: boolean
  :parser: vizshot
  :description: "display tone"
- :name: contour
  :default: true
  :type: boolean
  :parser: vizshot
  :description: "display contour"
- :name: min
  :type: float
  :default: null
  :optional: true
  :parser: ggraph
  :description: "minimum of tone/contour range"
- :name: max
  :type: float
  :default: null
  :optional: true
  :parser: ggraph
  :description: "maximum of tone/contour range"
- :name: nlev
  :type: int
  :default: null
  :min: 2
  :max: 99
  :optional: true
  :parser: ggraph
  :description: "number of tone/contour levels"
- :name: levels
  :type: array_float
  :default: null
  :optional: true
  :parser: ggraph
  :description: "comma-separated tone/contour levels"
- :name: interval
  :type: float
  :default: null
  :optional: true
  :parser: ggraph
  :description: "tone/contour interval"
- :name: color_bar
  :default: true
  :type: boolean
  :parser: vizshot
  :description: "display color bar"
- :name: log
  :default: false
  :type: boolean
  :parser: ggraph
  :description: "use logarithmic tone/contour levels"
- :name: coloring
  :default: false
  :type: boolean
  :parser: ggraph
  :description: "display rainbow contours"
- :name: tonc
  :default: false
  :type: boolean
  :parser: ggraph
  :description: "use tiling algorithm for tone"
