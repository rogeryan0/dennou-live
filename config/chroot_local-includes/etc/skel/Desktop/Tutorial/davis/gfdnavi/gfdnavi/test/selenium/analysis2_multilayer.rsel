# It's often a good idea to start the test with 'setup'.
# See /selenium/setup for more info.

def wait_for_image_loaded(id)
  wait_for_eval <<"EOS", 'false'
var win = this.page().getCurrentWindow();
var diagrams = (win.diagrams) ? win.diagrams : win.wrappedJSObject.diagrams;
diagrams[#{id}].imageLoading;
EOS
end

setup :fixtures => :all

# ADD A VARIABLE FOR THE TEST AND REDIRECT TO ANALYSIS2
open '/finder/add_to_list?path=%2Fsamples%2Freanalysis%2Fncep%2FT.jan.nc'

# DEFAULT DIAGRAM (JUST CONFIRMATION)
click 'diagram0_image'
click "diagram0_dm_window_button"
select "diagram0_layer0_dm", "tone_contour"
select "diagram0_layer0_dm_dims_new_axis0", "lon"
select "diagram0_layer0_dm_dims_new_axis1", "lat"

# ADD A LAYER TO THE DIAGRAM
click "diagram0_inputs_window_button"
click "diagram0_optwins_1_contents_addbutton"
wait_for_image_loaded(0)
assert_element_present "diagram0_optwins_1_contents_tabtopspan_1"
assert_element_not_present "diagram0_optwins_1_contents_tabtopspan_2"

# SET DIFFERENT PARAMETERS BETWEEN LAYER 0 AND LAYER 1
click 'diagram0_image' # CLOSE WINDOWS
click "diagram0_opts_window_button" # OPEN OPTION WINDOW
click "diagram0_optwins_2_contents_tabtopspan_0"
assert_visible "diagram0_optwins_2_contents_tabbody_0"
assert_not_visible "diagram0_optwins_2_contents_tabbody_1"
assert_checked "diagram0_layer0_spOpts_spOpt_0"
assert_checked "diagram0_layer0_spOpts_spOpt_1"
click "diagram0_layer0_spOpts_spOpt_1" # EMULATE ACTUAL CLICK EVENT
wait_for_image_loaded(0)
click "diagram0_optwins_2_contents_tabtopspan_1"
assert_not_visible "diagram0_optwins_2_contents_tabbody_0"
assert_visible "diagram0_optwins_2_contents_tabbody_1"
assert_checked "diagram0_layer1_spOpts_spOpt_0"
assert_checked "diagram0_layer1_spOpts_spOpt_1"
click "diagram0_layer1_spOpts_spOpt_0" # EMULATE ACTUAL CLICK EVENT
wait_for_image_loaded(0)
# ASSERT THAT PARAMETERS OF TWO LAYERS ARE INDEPENDENT 
assert_checked "diagram0_layer0_spOpts_spOpt_0"
assert_not_checked "diagram0_layer0_spOpts_spOpt_1"
assert_not_checked "diagram0_layer1_spOpts_spOpt_0"
assert_checked "diagram0_layer1_spOpts_spOpt_1"

# COPY DIAGRAM 0
click 'diagram0_image' # CLOSE WINDOWS
click "diagram0_menu_window_button" # OPEN ACTION WINDOW
click "diagram0_clone"
wait_for_image_loaded(1)
assert_element_present "diagram1_optwins_0_contents_tabtopspan_1"
assert_element_not_present "diagram1_optwins_0_contents_tabtopspan_2"
assert_not_checked "diagram0_layer0_spOpts_spOpt_1"
assert_not_checked "diagram0_layer1_spOpts_spOpt_0"

# ADD ONE MORE LAYER TO DIAGRAM 1
click "diagram1_inputs_window_button"
click "diagram1_optwins_1_contents_addbutton"
wait_for_image_loaded(1)
assert_element_present "diagram1_optwins_1_contents_tabtopspan_2"
assert_element_not_present "diagram1_optwins_1_contents_tabtopspan_3"
# CHANGE PARAMETER
click "diagram1_opts_window_button" # OPEN OPTION WINDOW
click "diagram1_optwins_2_contents_tabtopspan_0"
# THE PARAMETERS OF LAYER 2 SHOULD BE THE SAME AS THOSE OF LAYER 1
assert_not_checked "diagram1_layer2_spOpts_spOpt_0"
assert_checked "diagram1_layer2_spOpts_spOpt_1"
click "diagram1_dm_window_button" # OPEN METHOD & AXIS WINDOW
type "diagram1_layer2_dm_dims_new_axis2_td_left_text", "150"
wait_for_image_loaded(1)

# COPY DIAGRAM 1
click 'diagram1_image' # CLOSE WINDOWS
click "diagram1_menu_window_button" # OPEN ACTION WINDOW
click "diagram1_clone"
wait_for_image_loaded(2)
# COPY DIAGRAM 2
click 'diagram2_image' # CLOSE WINDOWS
click "diagram2_menu_window_button" # OPEN ACTION WINDOW
click "diagram2_clone"
wait_for_image_loaded(3)

# REMOVE LAYER 2 OF DIAGRAM 2
click "diagram2_dm_window_button"
click "diagram2_optwins_0_contents_tabtop_2_remove"
wait_for_image_loaded(2)
assert_element_present "diagram2_optwins_0_contents_tabtopspan_1"
assert_element_not_present "diagram2_optwins_0_contents_tabtopspan_2"
# REMOVE LAYER 1 OF DIAGRAM 2
click 'diagram1_image' # CLOSE WINDOWS
click "diagram2_dm_window_button"
click "diagram2_optwins_0_contents_tabtop_1_remove"
wait_for_image_loaded(2)
assert_element_present "diagram2_optwins_0_contents_tabtopspan_0"
assert_element_not_present "diagram2_optwins_0_contents_tabtopspan_1"

# REMOVE LAYER 1 OF DIAGRAM 3 (LAYER 2 BECOMES LAYER 1)
click "diagram3_dm_window_button"
click "diagram3_optwins_0_contents_tabtop_1_remove"
wait_for_image_loaded(3)
assert_element_present "diagram3_optwins_0_contents_tabtopspan_1"
assert_element_not_present "diagram3_optwins_0_contents_tabtopspan_2"
assert_value "diagram3_layer1_dm_dims_new_axis2_td_left_text", "150"

# TEST FOR DIAGRAM WITH NON-DEFAULT AXES
click 'add_diagram_button_right'
wait_for_image_loaded(4)
click "diagram4_dm_window_button"
select "diagram4_layer0_dm", "tone_contour"
select "diagram4_layer0_dm_dims_new_axis0", "lat"
wait_for_image_loaded(4)
select "diagram4_layer0_dm_dims_new_axis1", "level"
wait_for_image_loaded(4)
click "diagram4_optwins_0_contents_addbutton"
wait_for_image_loaded(4)

# RELOAD PAGE
open '/analysis2'
wait_for_page_to_load 30000
wait_for_image_loaded(0)
# ASSERT THAT DIAGRAM 0 IS CORRECTLY REPRODUCED
assert_element_present "diagram0_optwins_0_contents_tabtopspan_1"
assert_element_not_present "diagram0_optwins_0_contents_tabtopspan_2"
assert_checked "diagram0_layer0_spOpts_spOpt_0"
assert_not_checked "diagram0_layer0_spOpts_spOpt_1"
assert_not_checked "diagram0_layer1_spOpts_spOpt_0"
assert_checked "diagram0_layer1_spOpts_spOpt_1"
# ASSERT THAT DIAGRAM 1 IS CORRECTLY REPRODUCED
assert_element_present "diagram1_optwins_0_contents_tabtopspan_2"
assert_element_not_present "diagram1_optwins_0_contents_tabtopspan_3"
assert_value "diagram1_layer2_dm_dims_new_axis2_td_left_text", "150"
# ASSERT THAT DIAGRAM 2 IS CORRECTLY REPRODUCED
assert_element_present "diagram2_optwins_0_contents_tabtopspan_0"
assert_element_not_present "diagram2_optwins_0_contents_tabtopspan_1"
# ASSERT THAT DIAGRAM 3 IS CORRECTLY REPRODUCED
assert_element_present "diagram3_optwins_0_contents_tabtopspan_1"
assert_element_not_present "diagram3_optwins_0_contents_tabtopspan_2"
assert_value "diagram3_layer1_dm_dims_new_axis2_td_left_text", "150"

# More information about the commands is available at:
#   http://release.openqa.org/selenium-core/nightly/reference.html
# See also the RDoc for SeleniumOnRails::TestBuilder.
#
# Point the browser to http://localhost:3000/selenium/tests/analysis2_multilayer.rsel to see
# how this test is rendered, or to http://localhost:3000/selenium to
# run the suite.
