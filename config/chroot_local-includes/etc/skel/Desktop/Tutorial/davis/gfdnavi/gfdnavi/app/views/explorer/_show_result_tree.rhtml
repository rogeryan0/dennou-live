<% stack=Array.new
   ret=false
   stack.push({:node=>@results.resulttree,:count=>0,:check=>false,:level=>0})
   while stack.size>0 do
     cur=stack[stack.size-1] 
     if cur[:check]==false then
      if ret==true then
        cur[:level].to_i.times do
     -%>
     &nbsp;&nbsp;
        <% end 
      end
      if cur[:node].path!="/" then
     %>
     <%=cur[:node].path.gsub(" ","")-%>
   <% 
      end
       cur[:check]=true
       if cur[:node].children.size!=1 then -%>
       (<%= cur[:node].count -%>)<br>
       <%
        ret=true
        if cur[:node].children.size==0 && cur[:node].entries.size>0 then %>
          <%= render :partial=>"show_results", :collection=>cur[:node].entries, :locals=>{:indent=>cur[:level].to_i+1} %>
      <%end        
        
       else -%>/
       <%
        ret=false
       end
     end
     if cur[:count]==cur[:node].children.size then 
        stack.pop
      else
        key=cur[:node].children.keys[cur[:count]]
        stack.push({:node=>cur[:node].children[key],:count=>0,:check=>false,:level=>cur[:level]+1})
        cur[:count]=cur[:count]+1
      end
   end
-%>
