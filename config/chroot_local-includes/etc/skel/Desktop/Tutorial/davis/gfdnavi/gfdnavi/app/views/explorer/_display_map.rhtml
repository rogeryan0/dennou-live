<script type="text/javascript">

var select_region;
var partial_covered=[];
var points=[];
var marker;

window.onload = function() {
  map = new GMap2($("map"));
  map.addControl(new GLargeMapControl());
  map.addControl(new GScaleControl());
  map.addControl(new GMapTypeControl());
  startflg=false;
  dDrag();
<% if @start_lon==nil && @previd!=nil then 
#   qh=QueryHistory.find(:first,:conditions=>["querypath like concat('%',?)",@previd])
   qh=QueryHistory.find(:first,:conditions=>["queryset_id=? and querytype='space'",@results.qsetid])
   if qh!=nil then
    /\[S\]\((.*),(.*)\)-\((.*),(.*)\)/=~qh.description
         @start_lon=$1.to_f
         @start_lat=$2.to_f
         @end_lon=$3.to_f
         @end_lat=$4.to_f
   end
 end %>
  
<% if @start_lon!=nil then %>
  <% if @start_lon.to_f > 180 then
       slon=180-@start_lon.to_f
     else 
       slon=@start_lon.to_f
     end
     if @end_lon.to_f > 180 then
       elon=180-@end_lon.to_f
     else 
       elon=@end_lon.to_f
     end
  %>
  
  $("start_lon").value=<%= slon %>
  $("end_lon").value=<%= elon %>
  $("start_lat").value=<%= @start_lat %>
  $("end_lat").value=<%= @end_lat %>
    
  var rectObj;
  <% if @dateline==1 then %>
    rectObj = new GLatLngBounds(new GLatLng(<%=@start_lat.to_f%>,<%=elon%>), new GLatLng(<%=@end_lat.to_f%>,<%=slon%>));
  <% else %>
    rectObj = new GLatLngBounds(new GLatLng(<%=@start_lat.to_f%>,<%=slon%>), new GLatLng(<%=@end_lat.to_f%>,<%=elon%>));
  <% end %>
  var zm = map.getBoundsZoomLevel(rectObj);
  <% if @dateline==1 then 
    cntr=((slon+elon)/2)+180;
    if cntr>180 then
      cntr = 180-cntr
    end  
  %>
    map.setCenter(new GLatLng(<%=(@end_lat.to_f+@start_lat.to_f)/2 %>,<%= cntr %>), zm, G_NORMAL_MAP);
  <% else %>
    map.setCenter(new GLatLng(<%= (@end_lat.to_f+@start_lat.to_f)/2 %>,<%= (slon+elon)/2 %>), zm, G_NORMAL_MAP);  
  <% end %>
  var rectBounds = new GLatLngBounds(new GLatLng(<%=@start_lat%>,<%=slon%>),new GLatLng(<%=@end_lat%>,<%=elon%>));
  select_region = new Rectangle(rectBounds);
  map.addOverlay(select_region);
<% else %>
  map.setCenter(new GLatLng(35.39,139.44),1, G_NORMAL_MAP);
<% end %>  
  showpoints();
  showregions();

}

function modulo(x,y){
    mod = x % y;
    if (mod<0){ mod += y}
    return mod;
}

function dDrag() {
   GEvent.clearListeners(map,"mousemove");
   map.disableDragging();
   
   GEvent.addListener(map, "click", function(overlay, point){
   
      current_point=new GLatLng(point.x,point.y);
      
      if(point.x<0){ point.x=360+point.x; }   
      if(!startflg){
        if(select_region){
          map.removeOverlay(select_region);
        }
        start_point=point;
        $("start_lon").value=point.x;
        $("start_lat").value=point.y;
        startflg=true;
        var rectBounds = new GLatLngBounds(start_point,start_point);
        select_region = new Rectangle(rectBounds);
        map.addOverlay(select_region);
      }else{
        end_point=point;
        startflg=false;
        map.removeOverlay(select_region);
	mwblon = map.getBounds().getSouthWest().lng(); 
                 // mwblon = west boundary lon of the map
        if( modulo(end_point.x-mwblon,360) > modulo(start_point.x-mwblon,360)){
            sw_point = start_point;
            ne_point = end_point;
        }else{
            sw_point = end_point;
            ne_point = start_point;
        }
        ney = ne_point.y;
	if (sw_point.y > ney){
           ne_point.y = sw_point.y;
           sw_point.y = ney;
        }
	latlngbounds =new GLatLngBounds(sw_point,ne_point);
        select_region = new Rectangle(latlngbounds);
        map.addOverlay(select_region);
        $("start_lon").value=sw_point.x;
        $("start_lat").value=sw_point.y;
        $("end_lon").value=ne_point.x;
        $("end_lat").value=ne_point.y;
      }
    });
       
}

function create_square(slat,slon,elat,elon,col){
	  var polygon = new GPolygon([
	    new GLatLng(slat,slon),
	    new GLatLng(slat,elon),
	    new GLatLng(elat,elon),
	    new GLatLng(elat,slon),
	    new GLatLng(slat,slon)
	  ], col, 1, 0.6, '#ccccff', 0.1);
    return polygon;
}

function create_square2(sp,ep,col){
  return create_square(sp.lat(),sp.lng(),ep.lat(),ep.lng(),col);
}

function showregions(obj){
    var res=$("partial_covered").childNodes;
    var j=0;
    for(i=0;i<res.length;i++){
      if(res[i].id!=undefined){
        var slon = parseFloat(res[i].childNodes[1].innerHTML);
        var slat = parseFloat(res[i].childNodes[3].innerHTML);
        var elon = parseFloat(res[i].childNodes[5].innerHTML);
        var elat = parseFloat(res[i].childNodes[7].innerHTML);
	    sp=new GLatLng(slat,slon);
	    ep=new GLatLng(elat,elon);
	    partial_covered[j]=create_square2(sp,ep,'#0000ff');
	    map.addOverlay(partial_covered[j]);
	    j++;
      }     
    }
}

function show_regions(obj){
  if(!obj.checked){
    for(i=0;i<partial_covered.length;i++){
      map.removeOverlay(partial_covered[i]);
    }
  }
  else{
    showregions();
  }
}

function showpoints(){
    var res=$("points").childNodes;
    var j=0;
    for(i=0;i<res.length;i++){
      if(res[i].id!=undefined){
        var lon = parseFloat(res[i].childNodes[1].innerHTML);
        var lat = parseFloat(res[i].childNodes[3].innerHTML);
	    pt=new GLatLng(lat,lon);
	    points[j]=new GMarker(pt);
	    map.addOverlay(points[j]);
	    j++;
      }     
    }
}

function show_points(obj){
  if(!obj.checked){
    for(i=0;i<points.length;i++){
      map.removeOverlay(points[i]);
    }
  }
  else{
    showpoints();
  }
}

</script>
