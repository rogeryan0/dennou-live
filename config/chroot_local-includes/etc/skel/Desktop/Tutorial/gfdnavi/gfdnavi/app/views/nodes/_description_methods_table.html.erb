<% node = @node %>
<table border="1">
  <tr>
    <th>data</th>
    <td>
      <table border="1">
<% node.original_nodes.each{|nod|
     nod = nod.get_object if nod.kind_of?(NumRu::GfdnaviData::Base) %>
        <tr>
          <td>
<%  case nod
    when Variable %>
            <%= link_to nod.path, data_url(:path=>nod.path,:format=>"html") %>
<%  when VirtualData
      @node = nod %>
            <%= render :partial => "description_methods_table" %>
          </td>
<%  else
      raise nod.inspect
    end %>
        </tr>
<% } %>
      </table>
    </td>
  </tr>
  <tr>
    <th>functions</th>
    <td>
      <table border="1">
<% node.functions.each{|func| %>
        <tr>
          <td>
<%   if Hash === func
       case func[:type]
       when :func     
         f = func[:func] %>
            path=<%= link_to f.path, data_url(:path=>f.path, :format=>"html") %>
          </td>
          <td>
<%       if a = func[:args] %>
            arguments=<%= a.inspect %>
<%       end
       when :index %>
            <%= func[:index].inspect %>
          </td>
          <td>
<%     when :cut %>
            cut
          </td>
          <td>
            <%= func[:value].is_a?(Array) ? func[:value].join(", ") : func[:value].inspect %>
<%     end %>
          </td>
        </tr>
<%   end
   } %>
      </table>
    </td>
  </tr>
<% if dm = node.draw_method %>
  <tr>
    <th>draw method</th>
    <td>
       path=<%= link_to dm[0].path, data_url(:path=>dm[0].path, :format=>"html") %>
    </td>
     <td>
  <% if dm[1] && dm[1].keys.length > 0 %>
      arguments=<%= dm[1].inspect %>
  <% end %>
    </td>
  </tr>
<% end %>
  <tr>
</table>
