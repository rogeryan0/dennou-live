<?xml version="1.0" encoding="euc-jp" ?>
<!DOCTYPE html 
  PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
  "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="ja" xml:lang="ja">
<head>
<title>1. はじめに: 数式による理解から数値計算による理解へ</title>
<meta http-equiv="Content-type" content="text/html; charset=euc-jp" />
<link href="dcmodel.css" type="text/css" rel="stylesheet" />
</head>
<body>
<h5>
<center>
<table cellSpacing=0 cellPadding=0 width="100%" border=0>

<p><tr><td align=left>
<b>階層的地球流体スペクトルモデル集 SPMODEL</b>
</td><td align=right>
    << <a href=../index_ja.htm>Prev</a> |
       <a href=../index_ja.htm>Index</a>|
       <a href=sec2.htm>Next</a>    >>
    </td></p>
<tr>
</table>
</center>
<hr>
</h5>

<h2><a name="label-0" id="label-0">1. はじめに: 数式による理解から数値計算による理解へ</a></h2><!-- RDLabel: "1. はじめに: 数式による理解から数値計算による理解へ" -->
<p>計算機が発達し身近になる以前では,「数式とその変形」が地球や惑星などでの
自然現象を物理的にとらえる上での主な理論的手段であった. 
数式で表現されている物理法則を適応して対象を記述する支配方程式系を得, 
その振舞を理解するためには, これを解析的に手で解くほかなかった. 
解ける範囲は決して広くはなかったが, 
その代わりに紙と鉛筆を用いて「数式とその変形」を再現することによって, 
誰でも定式化から結果に至るまでの手順を追体験することが可能であり, 
他人によって得られた理解を共有することは比較的容易にできた. 
理論的考察の喜びともいうべき特性である. </p>
<p>計算機の発達した今日では支配方程式を数値的に解くことが普通である. 
このため解ける範囲は広がったが逆にその結果と理解を他者と
共有することが難しくなってしまった. 
理論的考察の喜ぶべき特性が失われつつある.
数値モデルでなされた仕事を理解するべく
論文に揚げられている図だけをみて考えてみても, 
その仕事をなした人と同じレベルの理解を得るのは困難である. 
当該数値計算を再現し, 
パラメターやモデルの設定を変えた実験を行うなどして, 
著者が行なった理解に至る経験を
読者自身も積み重ねることが必要となるだろう. 
理論的考察が伝統的に提供してきたような理解の共有を実現するためには, 
「数式とその変形」において行われて来た追体験操作を
計算機上でも実行しなければならないのである. 
しかし, 数値計算を独立に追体験することは一般には容易ではない. 
数値計算のためのモデルを最初から作るのは時間がかかりすぎるし, 
かといって, 
出来合いのモデルをブラックボックスで走らせても, 
何が起こっているのかがわからないため
結果の理解にはかならずしもつながらない. </p>
<p>このような状況に対応し数値計算時代における理解の共有をはかるべく,
我々は地球惑星流体力学の諸問題における標準的な数値実験を簡便に行なうための
一連のスペクトルモデル群の開発と整備を現在進めている
(<a href="ref.htm">SPMODEL <sup>[1]</sup></a>). 
その設計においては, </p>
<ol>
<li>プログラムソースコードは誰でも見ることができて, 
    変更して使えなければならない</li>
<li>プログラムソースコードは可読性が高く理解しやすくなければならず, 
    再構築し変形することが簡単にできればなおよい</li>
<li>計算結果の描画や後処理が簡単に行えなければならない,</li>
</ol>
<p>という方針に重点を置いている. </p>
<p>以下本論文では, SPMODEL プロジェクトで用いられている
ソースコードの可読性・可変性を特に意識した Fortran90 プログラミング手法と,
SPMODEL での実際のモデル並びにその計算例のいくつかとを紹介する. 
まず<a href="sec2.htm">第2節</a>では
プログラムソースコードの可読性・可変性を高めるために利用した
Fortran90 で強化された配列機能である, </p>
<ul>
<li>「要素別演算:配列の要素を指定せずに各要素に対する計算を行えること」</li>
<li>「配列を返す関数が定義できること」</li>
</ul>
<p>を説明する. 
次の<a href="sec3.htm">第3節</a>では, 
スペクトル計算の FORTRAN77 ライブラリである 
<a href="ref.htm">ISPACK<sup>[2]</sup></a>の
各サブルーチンを Fortran90 の配列を返す関数でくるみ
格子点とスペクトル空間のデータ変換や空間微分などの基本的な配列を返す関数を
用意した SPMODEL ライブラリを紹介する. 
<a href="sec4.htm">第4節</a>では SPMODEL のプログラミング手法を解説する. 
そこでは, SPMODEL ライブラリの配列を返す関数を利用することで
もともとの支配方程式の形と対応のよいプログラムを自然に書くことができ, 
したがって可読性の高いプログラムソースコードを作成しやすくなっていることが
説明される.
<a href="sec5.htm">第5節</a>ではこれまでに構築された SPMODEL プログラムの
計算結果を紹介する. 
最後に, <a href="sec6.htm">第6節</a>にてわれわれの提案をまとめる. </p>
<h5>
<hr>
<center>
<table cellSpacing=0 cellPadding=0 width="100%" border=0>

<p><tr><td align=left>
<b>階層的地球流体スペクトルモデル集 SPMODEL</b>
</td><td align=right>
    << <a href=../index_ja.htm>Prev</a> |
       <a href=../index_ja.htm>Index</a>|
       <a href=sec2.htm>Next</a>    >>
    </td></p>
<tr>
</table>
</center>
</h5>


</body>
</html>
