<?xml version="1.0" encoding="euc-jp" ?>
<!DOCTYPE html 
  PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
  "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="ja" xml:lang="ja">
<head>
<title>4. SPMODEL Programming</title>
<meta http-equiv="Content-type" content="text/html; charset=euc-jp" />
<link href="dcmodel.css" type="text/css" rel="stylesheet" />
</head>
<body>
<h5>
<center>
<table cellSpacing=0 cellPadding=0 width="100%" border=0>

<p><tr><td align=left>
<b>SPMODEL: A Series of Hierarchical Spectral Models for GFD</b>
</td><td align=right>
    << <a href=sec3.htm>Prev</a> |
       <a href=../index.htm>Index</a>|
       <a href=sec5.htm>Next</a>    >>
</td></p>
<tr>
</table>
</center>
<hr>
</h5>

<h2><a name="label-0" id="label-0">4. SPMODEL Programming</a></h2><!-- RDLabel: "4. SPMODEL Programming" -->
<h3><a name="label-1" id="label-1">4.1. Programing procedure in SPMODEL</a></h3><!-- RDLabel: "4.1. Programing procedure in SPMODEL" -->
<p>In this section, we explain a typical programming procedure for fluid
calculations with the spectral method using the SPMODEL library. 
For the
fundamentals on numerical fluid calculations with the spectral method, please
refer to other more appropriate textbooks such as <a href="ref.htm">[5]</a>.
The following is the procedure:</p>
<ol>
<li>Select a module of SPMODEL library which is appropriate for the geometry
    of the computational domain and boundary conditions.</li>
<li>Derive spectral-transformed governing equations in a formal manner.</li>
<li>Apply an appropriate finite difference scheme for time derivatives in the
    governing equations.</li>
<li>Simply express the code according to the formulation developed at the
    stages 2 and 3.</li>
</ol>
<p>As an example, let us construct a program for computing the time development
of the Korteweg-deVries equation in a one-dimensional domain whose length is L
under the cyclic boundary condition. The governing equation is</p>
<center><img src=sec4_1.png align=bottom></center>
<p>1. The module utilized is the one for one-dimensional domain with cyclic
boundaries which is shown as an example in 
<a href="sec3.htm">Section 3</a>. </p>
<p>2. The Fourier transform and its inversion with respect to the spatial
dimension x are defined as</p>
<center><img src=sec4_2.png align=bottom></center>
<p>The governing equation is then transformed as</p>
<center><img src=sec4_3.png align=bottom></center>
<p>Here, the tilde and the subscript denote the wavenumber component of the
Fourier transform.</p>
<p>3. If, for example, the Euler scheme is applied for the time derivative, we
have,</p>
<center><img src=sec4_4.png align=bottom></center>
<p>Superscripts <i>&tau;</i> and <i>&tau;+1</i>
denote the present and next time steps, respectively.</p>
<p>4. From the above formulation, we can write down the loop part of the program
for time integration as follows:</p>
<pre>do it=1,nt
    e_Zeta = e_Zeta + dt * &amp;
            ( -e_g(g_e(e_Zeta)*g_e(e_Dx_e(e_zeta))) &amp; 
              - e_Dx_e(e_Dx_e(e_Dx_e(e_zeta)))  ) 
enddo</pre>
<p>For the evaluation of the nonlinear term, the above program employs 
<a href="app1.htm">the transformed method</a>, 
in which the spectral data are transformed back to real space, 
the product term evaluated on the grid points of the real space, and
then transformed forward to the spectral space again.</p>
<h3><a name="label-2" id="label-2">4.2. The advantages of SPMODEL programming</a></h3><!-- RDLabel: "4.2. The advantages of SPMODEL programming" -->
<ul>
<li><p>Facility of programming</p>
<p>Note that, in the above example, 
<em>the main part of the final source program
code shows a good correspondence with the original mathematical expression
of the governing equation</em>. 
This is the most advantageous point of SPMODEL
programming. 
Although the spectral numerical method is utilized, the
corresponding program code can be written down directly when the governing
equations are simple. 
The reference manual is rarely needed during
programming, since the action of the functions and the spaces where the
input and output data are defined can be easily recognized from their
names owing to the systematic naming convention.</p>
<p>In contrast, the conventional (FORTRAN77) programming of the spectral
numerical method required  tremendous efforts for deriving the explicit
expression of each spectral component equation which includes wavenumbers
and interaction terms with other spectral elements.</p></li>
<li><p>Readability of program source codes</p>
<p>Since program source codes are written in a similar form to the original
mathematical expressions, the programs can be understood easily.</p>
<p>In contrast, in the conventional (FORTRAN77) programming of the spectral
numerical method, it was quite difficult to recognize the original
governing equations from the program source codes, since the expressions
formulated for programming were greatly modified from the original
mathematical expressions of the governing equations.</p></li>
<li><p>Facility of modification or alteration</p>
<p>Thanks to the above two features, we can modify or alter the programs
quite easily.</p></li>
</ul>
<h5>
<hr>
<center>
<table cellSpacing=0 cellPadding=0 width="100%" border=0>

<p><tr><td align=left>
<b>SPMODEL: A Series of Hierarchical Spectral Models for GFD</b>
</td><td align=right>
    << <a href=sec3.htm>Prev</a> |
       <a href=../index.htm>Index</a>|
       <a href=sec5.htm>Next</a>    >>
</td></p>
<tr>
</table>
</center>
</h5>


</body>
</html>
