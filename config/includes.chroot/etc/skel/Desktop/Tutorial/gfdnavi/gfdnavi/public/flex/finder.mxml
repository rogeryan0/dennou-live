<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" initialize="initApp()">

  <mx:Script>
    <![CDATA[
       import mx.controls.Alert;
       import mx.collections.ArrayCollection;
       import flash.net.navigateToURL;
<!--       import mx.events.PropertyChangeEvent;
-->
       import mx.binding.utils.ChangeWatcher;

       [Embed(source='Assets.swf',symbol='TreeFolderClosed')]
       [Bindable]
       private var closedFolderIcon:Class;

       [Bindable]
       private var treeNodeArray:ArrayCollection;

       [Bindable]
       private var selectedNodeItems:Object;

       [Bindable]
       private var detailsDirectoriesLinks:ArrayCollection;
       [Bindable]
       private var detailsVariablesLinks:ArrayCollection;
       [Bindable]
       private var detailsImagesLinks:ArrayCollection;
       [Bindable]
       private var detailsAncesstorsArray:ArrayCollection;
       [Bindable]
       private var detailsAncesstorsDetailsArray:ArrayCollection;
       [Bindable]
       private var detailsObject:Object;

//       private var nodeTreeSO:SharedObject;

       private function initApp():void {
         registerClassAlias("ArrayCollection",ArrayCollection);
         registerClassAlias("TreeNode",TreeNode);
//         nodeTreeSO = SharedObject.getLocal("nodeTree");
         TreeNode.hs = nodeHS;
         TreeNode.tree = nodeTree;
         TreeNode.changeHandler = treeNodeArrayChange;

//         if (nodeTreeSO.data.data) {
//           treeNodeArray = nodeTreeSO.data.data;
//           if (nodeTreeSO.data.openItems)
//             nodeTree.openItems = nodeTreeSO.data.openItems;
//         } else {
           treeNodeArray = new ArrayCollection();
//         }

         if (Application.application.parameters.uri) {
           addSite(Application.application.parameters.uri);
         }
       }

       public function addSite(uri:String):void {
         uri = uri.replace(/\/$/,"");
         var flag:Boolean = true;
         for (var item:Object in treeNodeArray) {
           if (item.name == uri) {
             flag = false;
             break;
           }
         }
         if (flag) {
           var node:Object = new Object();
           node.name = uri;
           node.host = "http://" + uri;
           node.numDirs = 1;
           node.children = TreeNode.getNodes(node.host+"/data.xml",node);
           treeNodeArray.addItem(node);
         }
       }

       private function treeLabel(item:Object):String {
         return item.name+' ('+item.numDirs.toString()+')'
       }

       private function downloadData():void {
         if (detailsObject.dlUri)
           navigateToURL(new URLRequest(detailsObject.dlUri));
       }

       private function treeNodeChange(event:Event):void {
         var obj:Object = nodeTree.selectedItem;
         var title:String;
         title = obj.host;
         if (obj.path) title += " " + obj.path;
         nodeEntites.title = title;
         selectedNodeItems = obj.children;
       }

       private function treeNodeItemOpening(event:Event):void {
//         nodeTreeSO.data.openItems = nodeTree.openItems;
       }

       public function treeNodeArrayChange(obj:Object):void {
         if (nodeTree.isItemOpen(obj)) {
           nodeTree.expandItem(obj, false, false);
           nodeTree.expandItem(obj, true, false);
         }
//         nodeTreeSO.data.data = nodeTree.dataProvider;
       }

       private function changeSelectedDetails(event:Event):void {
         var obj:Object = event.target.selectedItem;

         if (! (obj is TreeNode) ) obj = obj.node;

         var anc:Array = new Array();
         var parent:Object = obj;

         detailsDirectoriesLinks = obj.directories;
         detailsVariablesLinks = obj.variables;
         detailsImagesLinks = obj.images;

         while (parent) {
           anc.unshift(parent);
           parent = parent.parent;
         }
         var ary:Array = new Array();
         var item:Object;
         var node:Object;
         var str:String;
         var kas:ArrayCollection;
         for (var i:int=0; i<anc.length; i++) {
           node = anc[i];
           kas = node.keywordAttributes;
           str = ""
           for (var j:int=0; j<i; j++) str += " ";
           item = new Object();
           item.space = str;
           item.number = i;
           item.icon = node.getNodeTypeIcon();
           item.name = node.name;
           item.description = node.description;
           ary.push(item);
         }
         detailsAncesstorsArray = new ArrayCollection(ary);
         detailsAncesstorsDetailsArray = new ArrayCollection(ary);

         detailsObject = obj;
       }

     ]]>
  </mx:Script>

  <mx:HTTPService id="nodeHS" useProxy="false" showBusyCursor="true" requestTimeout="120"/>

  <mx:VDividedBox width="100%" height="100%">
    <mx:HDividedBox height="300" width="100%">
<!-- Tree -->
      <mx:Panel title="node tree" width="300" height="100%">
	<mx:VBox width="100%" height="100%">
	  <mx:Tree id="nodeTree" height="100%" width="100%"
		   labelFunction="treeLabel"
		   dataDescriptor="{new NodeTreeDescriptor()}" dataProvider="{treeNodeArray}" defaultLeafIcon="{closedFolderIcon}"
		   change="treeNodeChange(event)" itemOpening="treeNodeItemOpening(event)"/>
	  <mx:HBox>
            <mx:Text text="http://"/>
	    <mx:TextInput id="addSiteInput"/>
	    <mx:Button label="add Site" click="addSite(addSiteInput.text)"/>
	  </mx:HBox>
	</mx:VBox>
      </mx:Panel>
<!-- Right Window -->
      <mx:Panel id="nodeEntites" height="100%" width="100%">
	<mx:VBox width="100%" height="100%">
	  <mx:DataGrid id="dataGrid" height="100%" width="100%"
		       dataProvider="{selectedNodeItems}" change="changeSelectedDetails(event)">
	    <mx:columns>
	      <mx:DataGridColumn dataField="node_type" headerText="" width="20">
		<mx:itemRenderer>
		  <mx:Component>
		    <mx:CheckBox/>
		  </mx:Component>
		</mx:itemRenderer>
	      </mx:DataGridColumn>
	      <mx:DataGridColumn dataField="node_type" headerText="">
		<mx:itemRenderer>
		  <mx:Component>
		    <mx:Image source="{data.getNodeActionIcon()}"/>
		  </mx:Component>
		</mx:itemRenderer>
	      </mx:DataGridColumn>
	      <mx:DataGridColumn dataField="node_type" headerText="" width="25">
		<mx:itemRenderer>
		  <mx:Component>
		    <mx:Image source="{data.getNodeTypeIcon()}"/>
		  </mx:Component>
		</mx:itemRenderer>
	      </mx:DataGridColumn>
	      <mx:DataGridColumn dataField="name" headerText="name"/>
	      <mx:DataGridColumn dataField="title" headerText="title"/>
	      <mx:DataGridColumn dataField="size" headerText="size" width="60"/>
	      <mx:DataGridColumn dataField="mtime" headerText="last modified" width="170"/>
	      <mx:DataGridColumn dataField="description" headerText="description" width="300"/>
	    </mx:columns>
	  </mx:DataGrid>
	  <mx:HBox>
	    <mx:Button label="show\nchecked items"/>
	    <mx:Button label="Analyze/Visualize\nchecked items"/>
	  </mx:HBox>
	</mx:VBox>
      </mx:Panel>
    </mx:HDividedBox>

<!-- Details -->
    <mx:Panel title="details" width="100%">
      <mx:VBox width="100%">
	<mx:LinkButton id="dlLink" label="download" click="downloadData()" visible="{detailsObject.dlUri}" includeInLayout="{detailsObject.dlUri}" creationComplete="dlLink.includeInLayout=false;dlLink.visible=false"/>
        <mx:Image source="{detailsObject.imgSrc}"/>
	<mx:HBox width="100%">
	  <mx:Label text="{detailsObject.name}"/>
	  <mx:Label text="[{detailsObject.node_type}]"/>
	  <mx:Label text="{detailsObject.host} {detailsObject.path}"/>
	</mx:HBox>
<!--   Details Children -->
        <mx:Label text="Children"/>
        <mx:Label text="Directories"/>
	<mx:HorizontalList id="detailsDirectoriesList"
			   width="100%"
			   labelField="name" change="changeSelectedDetails(event)"
			   dataProvider="{detailsDirectoriesLinks}"/>
        <mx:Label text="Variables"/>
	<mx:HorizontalList id="detailsVariablesList"
			   width="100%"
			   labelField="name" change="changeSelectedDetails(event)"
			   dataProvider="{detailsVariablesLinks}"/>
        <mx:Label text="Images"/>
	<mx:HorizontalList id="detailsImagesList"
			   width="100%"
			   labelField="name" change="changeSelectedDetails(event)"
			   dataProvider="{detailsImagesLinks}"/>
<!--   Details Ancestors -->
        <mx:Label text="Ancestors"/>
        <mx:List id="detailsAncesstorsList"
		 width="100%" height="0" minHeight="0" measuredMinHeight="0"
		 dataProvider="{detailsAncesstorsArray}"
		 change="changeSelectedDetails(event)"
		 verticalScrollPolicy="off"
		 updateComplete="detailsAncesstorsList.height = detailsAncesstorsList.measureHeightOfItems()">
	  <mx:itemRenderer>
	    <mx:Component>
	      <mx:HBox>
		<mx:Label text="{data.space}{data.number}."/>
		<mx:Image source="{data.icon}"/>
		<mx:Label text="{data.name}"/>
	      </mx:HBox>
	    </mx:Component>
	  </mx:itemRenderer>
	</mx:List>
        <mx:List id="detailsAncesstorsDetailsList"
		 width="100%"
		 dataProvider="{detailsAncesstorsDetailsArray}"
		 variableRowHeight="true">
	  <mx:itemRenderer>
	    <mx:Component>
	      <mx:VBox>
		<mx:HBox>
		  <mx:Label text="{data.number}."/>
		  <mx:Label text="{data.name}"/>
		</mx:HBox>
		<mx:VBox>
		  <mx:HBox>
		    <mx:Label text="Description:"/>
		    <mx:Label text="{data.description}"/>
		  </mx:HBox>
		  <mx:VBox>
		    <mx:Button id="showButton" label="other attributes" click="otherAttributes.visible=true; otherAttributes.includeInLayout=true; showButton.visible=false; showButton.includeInLayout=false"/>
                    <mx:VBox id="otherAttributes" visible="false" includeInLayout="false">
		      <mx:Button label="hide" click="otherAttributes.visible=false; otherAttributes.includeInLayout=false; showButton.visible=true; showButton.includeInLayout=true"/>
		      <mx:List
			 id="otherAttributesList"
			 height="0" minHeight="0" measuredMinHeight="0"
			 dataProvider="{data.kas}" borderStyle="none"
			 verticalScrollPolicy="off"
			 updateComplete="if (data) if(data.kas) if(data.kas.length) {otherAttributesList.height=otherAttributesList.measureHeightOfItems();}">

			<mx:itemRenderer>
			  <mx:Component>
			    <mx:HBox>
			      <mx:Label text="{data.name}"/>
			      <mx:Label text="{data.value}"/>
			    </mx:HBox>
			  </mx:Component>
			</mx:itemRenderer>
		      </mx:List>
		    </mx:VBox>
		  </mx:VBox>
		</mx:VBox>
	      </mx:VBox>
	    </mx:Component>
	  </mx:itemRenderer>
	</mx:List>
      </mx:VBox>
    </mx:Panel>

  </mx:VDividedBox>

</mx:Application>
