---------------------------
注意： 
* ((<対応済の(or非対応になった)項目>)) は文書末尾に移動せよ.
  その際、どう対応したかも書くと better.
---------------------------

* analysis
  * 軸の縦横／上下flip
  * analysis左窓の横幅を調整できるように
  * axesでつまみ右のテキスト窓が隠れるのは不便
  * axesで、範囲だけでなく読みとばしステップも指定したい

* 2007/03のセミナー時にでたはなし
  * windowsで tar.gz ファイルができない
    * 直ってる？要確認
  * データ＆スクリプト保存する際のファイル名を自分で指定したい
  * 図のタイトルを指定したい
  * rake setup 時に、最初から root のパスワードを決めさせるべき
    * install スクリプトでは実装
    * --> install スクリプトで振る舞いが変わるのは嫌なので見直したい (horinout)

* データディスクスキャンによる自動登録
  * *.nc@temp in ../hoge.nc をした場合に、
    実際に ../hoge.nc がファイルとして存在した場合に例外を発生するように
  * 例外発生時のエラーメッセージはわかりやすく
    * 具体的な指示をだすように
      * その場合は、トレースバックは不要 （デフォルトは abort で
        --trace オプションをつけたら raise）

* メタデータ検索、ランキング、検索インタフェース(渡辺)
  * swathテストデータをｃｖｓコミットする
  * 非全球格子の場合の balloon の位置は中心でいいのか？
    -- ズームしたら領域はかぶるけど中心は外にでる場合がある
  * 今後付け加えたいこと by 渡辺さん
    * 各マークがカバーする範囲をマップ上に表示したい
    * キーワード属性の検索 by key & value (incl. key そのものの
      サーチやランキング）
    * 緯度円、経度円対応
    * 空間情報について、階層的に索引化したい
      （google map におけるタイルのようにいろんな大きさで）
  * 渡辺さんに RD を知ってもらう

* パッケージング、導入の易化
  * rake setup / rake update
    * これから何をするかを一通り表示する (for 心の準備)
    * rake setup
      * password / passphrase などを順次入力させる
        * install script では実装済み
        * --> install スクリプトで振る舞いが変わるのは嫌なので見直したい (horinout)
    * rake update
      * update の対象となる事項を表示し、それぞれを行うか聞いていく。
        例えば
        * data directory をスキャンしてメタデータDBを再構成
        * userテーブルを更新
        * gfdnavi のバージョンアップ
        など。それぞれにおいて、どのような選択肢があり、その結果
        何が起こるかを示す。


* ドキュメンテーション / help
  * popupするヘルプをもっと充実させる。
  * 総合チュートリアルでは、mysql ではなく sqlite3 を使うことに
    する。これで、導入が楽になるはず。

---------------
== 対応済の(or非対応になった)項目

* 2007/03のセミナー時にでたはなし
  * saveした図を表示したい
   （今はメタデータのみ。とりあえず descriptionで対応か）
  * gzip だけでなく zip もできてほしい
    * その後、portable に 実現するのは難しそうという話がでたので、要再考

  * Drawボタンが遠い -- 左下窓内 *にも* ほしい
    * 左窓にボタン移動
    * もとに位置はボタンはとりあえず置かない
    * タブの意味的に、タブの選択によって、他の部分が変わるのはあまりよくないらしい

* データディスクスキャンによる自動登録
  * 森川ドキュメント
    * contains を書き忘れている。パスの書き方良かったっけ？ 要確認。
  * RAILS_ROOT/user の下もスキャンするように

  * 描画デフォルトオプションを yml で指定できるようにする
    * 特定のファイルや変数、あるディレクトリー以下の任意の
       ファイルなど、yml で設定できる対象のスコープはかなり柔軟
       性があるので、活用する。
    * 作業の流れは、再スキャン時のDB再現性確保と同様に、
       そのための枠組みを西澤さんがつくり（これはもう済んだ模様）、
       森川さんが自動スキャンプログラムを対応させる。
  * DB再構築をツリーの一部でできるように
    * あるディレクトリー以下だけを対象に自動登録スクリプトを
      走らせられるようにする。
  * 再スキャン時の DB 再現性を確保する
    * user / group 情報は、keyword=attributes とは別テーブルで
       管理されている。それを yml に書き出すようにし(--> 西澤),
       自動登録スクリプトがそれを正しく解釈できるようにする(--> 森川)。
  * シンボリックリンク対応
  * yaml におけるワイルドカード % と * の使い分けはわかりにくい。
    * （ワークショップ時にこうしましょうと言った話。あとで
       西澤＆堀之内が話して、やっぱよくないということになった）：
       対症療法として、利用頻度がさほど多くないかもしれない % の
       についての記述は、ドキュメントの下のほうに移して目立たなく
       することで乗り切ってしまう。
    * （新案）:  ワイルドカード事態は統一して使い分けを要らなくする。
       統合を要に表すために、aggregate: という新キーを用意する。
         旧
          contains:
            u%     # u から始まる任意変数に共通するメタデータ追加
            *.nc   # *.nc をバーチャルに結合する
         新
          contains:
            u*     # u から始まる任意変数に共通するメタデータ追加
          aggregate:
            *.nc   # *.nc をバーチャルに結合する

* パッケージング、導入の易化
  * 配布版パッケージング再構成
    * 現在は DLして展開したものをそのまま編集して使わせてるが、
      DL and (展開 or インストール）後、運用用の場所に改めて
      展開させる(各userのディレクトリーとか /var とか)。
      * パッケージには運用用の場所に展開するための setup コマンド
        を含めるか、それ自体を setup.exe にする。
      * gfdnavi の配布版パッケージングと、各自の運用用コピーの分離
        * gfdnaviがバージョンアップしてもやり直ししないで済むように
        * 配布版からはじめても cvs 版も使えるのが良い。
      * とりあえず　install スクリプトを作ってみた
    * ユーザディレクトリ や /var にインストール後に、make setup
      に続けられるようにするとよいだろう（後で setup するオプションも残す。）

* ドキュメンテーション / help
  * gfdnavi ドキュメンテーションやチュートリアルへのリンクが欲しい。
